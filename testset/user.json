{
  //주민등록증
  "id": "http://public.administration/credentials/24532",

  "type": ["VerifiableCredential", "IDCredential"],

  "issuer": "https://public.administration/issuers/982349",

  "issuanceDate": "2021-10-01T19:73:24Z",

  "credentialSubject": {
    "id": "did:example:ebfeb1f712ebc6f1c276e12ec21",

    "userOf": {
      "id": "did:example:c276e12ec21ebfeb1f712ebc6f1",
      "name": [
        {
          "value": "진 켈리",
          "lang": "ko"
        }
      ],
      "age": [
        {
          "value": "23",
          "lang": "ko"
        }
      ],
      "address": [
        {
          "value": "서울, 대한민국",
          "lang": "ko"
        }
      ]
    }
  }
}


//패션
"id": "http://mushinsa/credentials/14532", // 사용자가 우리 서비스에서 의류를 한달에 50만원 가량 지불했어를 확인시켜주는 문서

"type": ["VerifiableCredential", "ShopCredential"],

"issuer": "https://mushinsa/issuers/562349", // 미리 합의된 데이터를 모아놓는다. EX. 우리 이런 형식의 JSON으로 쓸거니까 너네도 여기 맞춰서 보내

"issuanceDate": "2021-09-01T13:55:24Z",

"credentialSubject": {
  "id": "did:example:ebfeb1f712ebc6f1c276e12ec21", // user did

  "fashionOf": {
    "id": "did:example:c276e12ec21ebfeb1f712ebc6f1", //무신사 did
    "Amount": [
      {
        "value": "500000",
        "lang": "ko"
      },
    ],
    "onOffline": [
      {
        "value": true, //온라인 true 오프라인 false
        "lang": "ko"
      },
    ],
    "product": [
      {
        "value": "액세서리",
        "lang": "ko"
      },
    ]
  }
}


  // 국민 보험 공단
  "id": "http://job.insurance/credentials/14532",

  "type": ["VerifiableCredential", "InsuranceCredential"],

  "issuer": "https://job.insurance/issuers/2362349",

  "issuanceDate": "2021-10-01T19:73:24Z",

  "credentialSubject": {
    "id": "did:example:ebfeb1f712ebc6f1c276e12ec21",

    "insuranceOf": {
      "id": "did:example:c276e12ec21ebffdre6712ebc6f1",
      "occupation": [
        {
          "value": "IT",
          "lang": "ko"
        }
      ],
      "income": [
        {
          "value": "80000000",
          "lang": "ko"
        }
      ],
      "location": [
        {
          "value": "서울",
          "lang": "ko"
        }
      ]
    }
  }

// @context
// 두 소프트웨어 시스템이 데이터를 교환해야하는 경우 
// 두 시스템이 이해하는 용어를 사용해야 한다.
// 검증가능한 크리덴셜 및 검증가능한 프레젠테이션에는 반드시 @context 속성이 포함되어야 한다.
// @context의 속성 값은 첫 번째 항목이 
// https://www.w3.org/2018/credentials/v1 값을 갖는 URI 인 순서 집합이어야 한다.
  
// id
// id 속성은 사람, 제품 또는 조직과 같은 객체를 명확하게 참조하기 위한 것
// 만약 id 속성이 존재한다면:
// id 속성을 표현할 때 반드시 다른 사용자들이 특정 사물을 표현할 때 사용할 것으로 예상되는 식별자로 표현해야 한다.
// id 속성은 반드시 하나의 값만 가져야 한다.
// id 속성의 값은 반드시 URI 이어야 한다

// type
// 제공된 검증가능한 크리덴셜 또는 검증가능한 프레젠테이션이 
// 적절한지 여부를 결정하기 위해 type정보를 사용
// 검증가능한 크리덴셜과 검증가능한 프레젠테이션에는 반드시 type속성이 있어야 한다
// type속성의 값은 반드시 맵핑된(@context 속성의 해석을 통해), 하나 또는 이상의 URIs다

// credentialSubject
// 하나 이상의 주체들에 대한 클레임을 표현하기 위한 항목인 credentialSubject
// 검증가능한 크리덴셜에는 무조건 credentialSubject 속성이 있어야 한다.
// 속성의 값은 검증가능한 크리덴셜의 주체와 각각 관련된 하나 이상의 특성을 포함하는 객체 세트로 정의
// 검증가능한 크리덴셜로 여러 주체와 관련된 정보를 표현할 수 있다. 
"credentialSubject": [{
  "id": "did:example:ebfeb1f712ebc6f1c276e12ec21",
  "name": "Jayden Doe",
  "spouse": "did:example:c276e12ec21ebfeb1f712ebc6f1"
}, {
  "id": "did:example:c276e12ec21ebfeb1f712ebc6f1",
  "name": "Morgan Doe",
  "spouse": "did:example:ebfeb1f712ebc6f1c276e12ec21"
}],

// issuer
// 검증가능한 크리덴셜은 무조건 issuer 속성이 있어야 한다.
// issuer 속성 값은 무조건 URI이거나 id 속성을 포함하는 객체여야한다.
// issuer 또는 해당 id의 URI는 역 참조 된 경우 
// 크리덴셜에 표시된 정보를 검증하는 데 사용할 수 있는 issuer에 대한 
// 기계판독 가능한 정보를 포함하는 문서를 생성하는 URI 여야 한다.

// proof
// 외부 프루프은 § 6.3.1 JSON Web Token섹션에 자세히 설명되어 있는
// JSON 웹 토큰과 같은 데이터 모델의 표현을 감싸는 것이다

// 7.16 일회용 크리덴셜 선호

